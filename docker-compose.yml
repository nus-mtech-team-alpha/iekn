services:
  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"
    healthcheck:
      test: curl -f http://localhost:8500/v1/status/leader || exit 1
      interval: 5s
      timeout: 5s
      retries: 3
  auth-db:
    image: mariadb:10.5.8
    container_name: auth-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      MYSQL_USER: username
      MYSQL_PASSWORD: password
    healthcheck:
      test: mariadb -u $$MYSQL_USER -p$$MYSQL_PASSWORD
      interval: 5s
      timeout: 5s
      retries: 3
  kb-nosql:
    image: mongo:4.4.3
    container_name: kb-nosql
    healthcheck:
      test: mongo --eval "db.adminCommand('ping')"
      interval: 5s
      timeout: 5s
      retries: 3
  mgmt-db:
    image: mariadb:10.5.8
    container_name: mgmt-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      MYSQL_USER: username
      MYSQL_PASSWORD: password
    healthcheck:
      test: mariadb -u $$MYSQL_USER -p$$MYSQL_PASSWORD
      interval: 5s
      timeout: 5s
      retries: 3
  rag-pgvector:
    image: phidata/pgvector:16
    container_name: rag-pgvector
    environment:
      POSTGRES_USER: ai
      POSTGRES_PASSWORD: ai
      POSTGRES_DB: ai
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 5s
      timeout: 5s
      retries: 3
  ollama:
    image: ollama/ollama:0.3.13
    container_name: ollama
    healthcheck:
      test: ollama
      interval: 5s
      timeout: 5s
      retries: 3
  webapp:
    build:
      context: modules/webapp/
      dockerfile: Containerfile
    container_name: webapp
    ports:
      - "5000:5000"
      - "80:80"
    depends_on:
      consul:
        condition: service_healthy
  api-gateway:
    build:
      context: modules/api-gateway/
      dockerfile: Containerfile
    container_name: api-gateway
    depends_on:
      consul:
        condition: service_healthy
  auth-service:
    build:
      context: modules/auth-service/
      dockerfile: Containerfile
    depends_on:
      consul:
        condition: service_healthy
  kb-service:
    build:
      context: modules/kb-service/
      dockerfile: Containerfile
    depends_on:
      consul:
        condition: service_healthy
  mgmt-service:
    build:
      context: modules/mgmt-service/
      dockerfile: Containerfile
    container_name: mgmt-service
    depends_on:
      consul:
        condition: service_healthy
      mgmt-db:
        condition: service_healthy
  rag-service:
    build:
      context: modules/rag-service/
      dockerfile: Containerfile
    container_name: rag-service
    depends_on:
      consul:
        condition: service_healthy
      rag-pgvector:
        condition: service_healthy
      ollama:
        condition: service_healthy