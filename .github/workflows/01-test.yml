name: 01 - Run software and security tests

on: 
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

jobs:
  # lint:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]
    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: ${{ matrix.python-version }}
      
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pylint
      
  #     - name: Analysing the code with pylint
  #       run: |
  #         pylint $(git ls-files '*.py')

  lint-pytest:
    name: Lint Pytest
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd modules/rag-service \
            python -m pip install --upgrade \
            pip setuptools wheel \
            ruff mypy pytest types-pyyaml \
            pip install --no-deps -r requirements.txt
      
      - name: Ruff format
        run: |
          ruff format .
      
      - name: Ruff check
        run: |
          ruff check .

  # sast:
  #   name: SonarCloud Analysis
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
      
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env: 
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  #       with:
  #         args: >
  #           -Dsonar.organization=nus-mtech-team-alpha
  #           -Dsonar.projectKey=nus-mtech-team-alpha_iekn
  #           -Dsonar.sources=.
  #           -Dsonar.exclusions=**/*.java
  
  # dependency-review:
  #   name: Dependency Review 
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: 'Checkout repository'
  #       uses: actions/checkout@v4

  #     - name: 'Dependency Review'
  #       uses: actions/dependency-review-action@v4
  #       with:
  #         deny-licenses: GPL-1.0-or-later
  #         base-ref: ${{ github.event.pull_request.base.sha || 'main' }}
  #         head-ref: ${{ github.event.pull_request.head.sha || github.ref }}
  #       # Commonly enabled options, see https://github.com/actions/dependency-review-action#configuration-options 